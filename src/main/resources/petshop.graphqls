type Query {
    pets: [Pet]
    petId(id: Int!): Pet
    petName(name: String!): [Pet]
    owners: [Owner]
    ownerId(id: Int!): Owner
}

type Mutation {
    newPet(type: Animal!, name: String!, age: Int!, ownerId: Int!): Pet
    updatePet(id: Int!, type: Animal!, name: String!, age: Int!, ownerId: Int!): Pet
    newOwner(name: String!, age: Int!): Owner
    updateOwner(id: Int!, name: String!, age: Int!): Owner
    addNestedObject(obj: NestedObject!): Owner
}

input NestedObject {
    owner: Owner
    pets: [Pet]
}

type Pet {
    id: Int!
    type: Animal!
    name: String!
    age: Int!
    owner: Owner!
}

type Owner {
    id: Int!
    name: String!
    age: Int!
    pets: [Pet]!
}

enum Animal {
    DOG
    CAT
    BADGER
    MAMMOTH
}



